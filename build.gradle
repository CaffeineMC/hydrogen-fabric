plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
}

archivesBaseName = "${project.archives_base_name}-mc${project.minecraft_version}"
group = project.maven_group
version = project.mod_version

def build_release = System.getenv("BUILD_RELEASE") == "true"
def build_id = System.getenv("BUILD_ID")

if (!build_release) {
    version += "-SNAPSHOT"
}

if (build_id != null) {
    version += "+build.${build_id}"
}

loom {
    mixin.defaultRefmapName = "mixins.hydrogen.refmap.json"
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	include(modImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_api_version)))
}

repositories {
	maven { url = "https://jitpack.io" }
}

if (project.use_third_party_mods) {
	repositories {
		maven { url = "https://maven.gegy.dev" }
	}

	dependencies {
		// DataBreaker applies a number of patches to eliminate the loading of data fixers
		// This greatly reduces the amount of time needed to start the game, but is generally unsafe in production
		modRuntimeOnly ("supercoder79:databreaker:${project.databreaker_version}") {
			transitive = false
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
    from "LICENSE"
}

jar {
    from "LICENSE.txt"
}
